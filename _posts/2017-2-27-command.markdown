---
layout: post
title: Shortcut Keys
date: 2017-01-20
comments: true
external-url:
categories: ruby
---

### sublime text3 keys
---

`Ctrl+D` 选中光标所占的文本，继续操作则会选中下一个相同的文本;

`Alt+F3` 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑;

`Ctrl+L`选中整行，继续操作则继续选择下一行，效果和Shift+↓ 效果一样;

`Ctrl+Shift+L` 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行;

`Ctrl+Enter` 在下一行插入新行,即使光标不在行尾，也能快速向下插入一行;

`Ctrl+Shift+Enter` 在上一行插入新行,即使光标不在行首，也能快速向上插入一行;

`Ctrl+Shift+D` 复制光标所在整行，插入到下一行;

`Ctrl+Shift+K` 删除整行;

`Ctrl+/` 注释单行;

`Ctrl+Shift+/` 注释多行;

`Ctrl+F` 打开底部搜索框，查找关键字;

`Ctrl+shift+F` 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找;

`Ctrl+P` 文件切换;

`Ctrl+Alt+P` 项目切换;

`Ctrl+R` 跳转标记。

<hr>
### better coffeescript 
---

`alt+shift+t` - Run a Cake task

`alt+shift+r` - Run some CoffeeScript (prints output to a panel on the bottom)

`alt+shift+s` - Run a syntax check

`alt+shift+c` - Compile a file

`alt+shift+d` - Display compiled JavaScript

`alt+shift+l` - Display lexer tokens

`alt+shift+n` - Display parser nodes

`alt+shift+w` - Toggle watch mode

`alt+shift+p` - Toggle output panel


### Js console command
---

`console.log();`: Firebug内置一个console对象，log(obj)提供显示信息的方法;

`console.log("%o",obj);`:%o占位符，可以用来查看一个对象内部情况;

`console.dir(obj);`:可以显示一个对象所有的属性和方法;

`console.trace();`:用来追踪函数的调用轨迹。

>[摘自:Firebug控制台详解](http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html)




### Brackets keys
---

`Ctrl+Shift+H`: 可以呼出与关闭文件树

`Ctrl + E`:          快速预览/编辑 css样式/javascript函数/取色选择

`Ctrl + +/-`:       放大缩小编辑区字体大小

`Ctrl + 0`:          重置编辑区字体大小 

`Ctrl + Alt + P`:  打开即时预览功能

`Ctrl + / `:         行注释

`Ctrl + Alt + /`:  块注释

>      注：css代码、html代码注释时只能使用块注释快捷键


### using rvm
---


`/bin/bash --login`

`rvm gemset use bloggem`

`rvm list`

`rvm use 2.3.3`

`rvm gemset list`

`rvm gemset create  railsapp`

`rvm use 2.3.3@railsapp`

`rvm gemset delete railsapp`

### git command list
---
`git clone git@github.com:symphonyh/forum.rb.git`

`git init`

`git status`

`git add .`

`git commit -m "XXX"`

`git push -u origin master`

`git push heroku master`



### ubuntu 
---
`which rails` 

`pwd`

`sudo mount -t vboxsf sarah /mnt/share` 

`apt-get update`: 更新源;

`apt-get upgrade`: 更新已安装的包;

`apt-get dist-upgrade` :升级系统;

`apt-get clean`: 清理无用的包;

`apt-get autoclean`: 清理无用的包;

`apt-get check`: 检查是否有损坏的依赖


### gem
---
`gem install [gemname]`

`gem install [gemname] --version=[ver]`

`gem update [gemname]`

`gem install -v=4.2.5 rails --no-rdoc --no-ri`

`gem sources -l`

`gem list`


### heroku
---

`heroku create hello0127` ,也可以在heroku web上建立新的app

`git push heroku master`

`heroku run rake db:migrate`

`heroku apps:rename hello0127`

`heroku hello0127`

`heroku open`

`heroku logs --tail`

`heroku run rails console`

 rails项目中 `Gemfile`:

```ruby
 gem 'pg'
 gem 'rails_12factor', group: :production

 group :development, :test do
   gem 'sqlite3'
   # ....
 end
 ```

 `database.yml`:

 ```ruby
 production:
   adapter: postgresql
   encoding: unicode
 ```

### rbenv install ruby
---

- 安装ruby

`rbenv install --list`:   列出所有 ruby 版本;
`rbenv install 1.9.3-p392`:      安装 1.9.3-p392;

- 列出版本

`rbenv versions`:                列出安装的版本;
`rbenv version`:                 列出正在使用的版本;

- 设置版本

`rbenv global 1.9.3-p392`       默认使用 1.9.3-p392;
`rbenv shell 1.9.3-p392`        当前的 shell 使用 1.9.3-p392, 会设置一个 `RBENV_VERSION` 环境变量;

- 其他

`rbenv rehash`                  每当切换 ruby 版本和执行 bundle install 之后必须执行这个命令;
`rbenv which irb`               列出 irb 这个命令的完整路径;
`rbenv whence irb`              列出包含 irb 这个命令的版本;