---
layout: post
title: JS 对象
date: 2020-02-19
comments: true
external-url:
categories: Javascript
---

## JS 中对象的写法
### es5 中对象
```js
function Person(name,age) {
      this.name = name;
      this.age = age;
    }
  Person.prototype.showName = function() {
    alert(this.name);
   };  

  Person.prototype.showAge = function() {
    alert(this.age);
   };  

  let p = Person('cloudhan',18);  

  p.showName();
  p.showAge();  
  ```
### es6中对象

```js
class Person {
    constructor(name,age){
      this.name = name;
      this.age = age;
    }
  showName() {
    alert(this.name);
   }  

  showAge() {
    alert(this.age);
   }  

  }  

  let p = Person('cloudhan',18);  

  p.showName();
  p.showAge();
```  
### es5中对象的继承
```js
  function Worker(namne,age,job){
    Person.call(this,name,age);
    this.job = job;
  }  

  Woker.prototype = new Person();
  Worker.prototype.constructor = Worker;  

  Worker.prototype.showJob = function(){
    alert(this.job);
  };
```
### es6中对象的继承
```js
class Worker extends Person{
  constructor(name,age,job){
    super(name,age);  //超类
    this.job = job;
  }


showJob(){
  alert(this.job);

  }
}

let p = Person('cloudhan',18,'CEO');  
p.showJob();

```
## JS模块的导出和引入
```js
export let a = 12;

export const a = 12;

export {a, b, c};

export function show() {
    // body...
}

export class person{

}

export default XX;  //默认成员

mport * as mod1 from './mod1';

import mod1 from './mod1' //import defaule
    
  console.log(mod1.a);
  console.log(mod1);

import {a,b as name2} from '.mod1';

import 'XXX'; // 通常引入css 图片

let p = awit import("./mod1"); //异步引入，返回 Promise 
```