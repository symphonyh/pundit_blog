---
layout: post
title: Oracle PLSQL语法使用入门
date: 2019-10-12
comments: true
external-url:
categories: Oracle 
---

PL/SQL（procedure Language/SQL）是Oracle对sql语言的过程化扩展，对SQL命令语言中增加了过程处理语句（如分支，循环等），使SQL语言具有过程处理能力;

PLSQL是sql的扩展，操作oracle数据库效率最高，一般通过PLSQL实现简单的处理业务，再通过程序接口调用;是学习存储过程，存储函数，触发器三大数据库对象的重要基础。



### PL/SQL基础语法

语法格式：

```
  [DECLARE   
     --声明变量 
     ] 
  BEGIN 
     --代码逻辑   
  [EXCEPTION 
    --异常处理 
    ] 
  END;

```

1、基本变量类型

1.1 `DECLARE`：定义基本变量

类型：char,varchar2,date,number,boolean,long

定义语法：变量名 类型（长度）

   
1.2 变量赋值

1.2.1 变量名:=值;

1.2.2 从数据库表中得到数据并赋值给变量,查询结果只能是一行记录，且得到的字段个数要和变量个数相同，一一对应;

`select 字段1,字段2,... into 变量名1,变量名2,... from t_account where id=1;`
      
1.2.3 记录型变量的赋值取值,记录型变量的赋值,同上也只能返回一行记录;

`select * into v_account from t_account`    

>记录型变量的取值,通过'.'加字段名形式获取每一个字段的值

`v_account.usenum`    
    
1.3 输出语句：

`DBMS_OUTPUT.PUT_LINE(...);`  

2、引用型变量和记录型变量

 2.1 引用型变量

`my_name emp.ename%type;`

表示my_name这个变量的类型是引用emp这个表的ename列的类型


 2.1记录型变量

`emp_rec emp%rowtype;`

emp_rec相当于一个数组，存的类型是一条记录中的类型，打印某一列的时候，直接用emp_rec.列名即可


3、if语句的使用

IF语句的3种形式

```
if 条件 then 语句1；

语句2；

end if；
```

```
if 条件 then 语句序列1：

else 语句序列2；

end if;
```
```
if 条件 then 语句；

elsif 语句 then 语句；

else 语句；

end if；
```

4、循环语句的使用

4.1 无条件循环 

```
loop 
  --循环语句  
  exit when 循环停止条件;        //停止循环, exit;可直接停止循环
end loop;
 
```
4.2条件循环

```
while 条件 
loop
...
end loop;
```        
4.3for循环

```
for 变量  in 起始值..终止值 
loop 
   
end loop;
```
---

### 游标

1、游标的语法

游标：就是一个结果集（在plsql语句中来使用光标来代表一个集合）

光标的语法：CURSOR 光标名[(参数名 数据类型[,参数名 数据类型]...)] IS SELECT 语句;

例如 ：`cursor c1 is select ename from emp;`

打开光标：` open c1;` （打开光标执行查询）

关闭光标: `close c1; `（关闭游标释放资源）


取一行光标的值： `fetch c1 into pename;` （取一行到变量中）

```
 open  游标名称                             //开启游标，
    loop 
        fetch  游标名称  into  变量           //获取游标结果集中的下一个值
        exit   when   游标名称%notfound     //没有下一个值则跳出循环
    end loop; 
close  游标名称                            //结束游标
```

>游标中fetch的作用：把当前指针指向的记录返回;将指针指向下一条记录;

---

### 异常

异常是程序设计语言提供的一种功能，用来增强程序的健壮性和容错性;

```
exception
    when 异常类型1 then 处理语句
    when 异常类型1 then 处理语句

```
    
>常见的异常类型：

|异常类型	|含义|
|:-------------|:------------|
|No_data_found | 使用select into未返回行 |
|Too_many_rows | 执行select into时，结果集超过一行 |
|Zero_Divide |被零除|
|Value_error |算术或转换错误 |
|Timeout_on_resource  |在等待资源是发生超时,这个是自定义的例外 |

---

### 示例代码:统计每年员工的入职人数

```
DECLARE

定义每年员工入职人数
pcount NUMBER := 0;

定义年份
pyear VARCHAR2(4);

定义员工总人数
pnum NUMBER := 0;

定义游标
CURSOR cemp IS SELECT to_char(hiredate,'YYYY') AS hireyear,COUNT(*) 
FROM emp 
GROUP BY to_char(hiredate,'YYYY');

BEGIN

打开游标
OPEN cemp;

循环遍历
LOOP
FETCH cemp INTO pyear,pcount;

开始立即检测数据,取值为空退出循环
EXIT WHEN cemp%NOTFOUND;

输出每年员工入职人数
dbms_output.put_line(pyear || ' -> ' || pcount);

统计总人数
pnum := pnum + pcount;

END LOOP;

dbms_output.put_line('员工总人数:' || pnum);

关闭游标
CLOSE cemp;

END;

```
---

参考：

>[更多代码例子]

https://mbd.baidu.com/newspage/data/landingshare?pageType=1&isBdboxFrom=1&context=%7B%22nid%22%3A%22news_9863883009459455687%22%7D

>[极客学院的入门教学] https://www.bilibili.com/video/av24723987/?p=2&t=323

>[PLSQL语法入门] https://www.cnblogs.com/liuxuelin/p/10004173.html